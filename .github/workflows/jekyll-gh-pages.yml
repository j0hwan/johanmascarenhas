# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and Deploy job
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Setup Ruby environment
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Specify the Ruby version compatible with your Jekyll site

      # 3. Install dependencies using Bundler
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      # 4. Install any additional dependencies (if needed)
      - name: Install additional dependencies
        run: |
          pip install nbconvert
          # Add any other necessary package installations here

      # 5. Execute conversion script
      - name: Execute conversion script
        run: python scripts/convert_notebooks.py

      # 6. Build the Jekyll site
      - name: Build Jekyll site
        run: bundle exec jekyll build

      # 7. Upload the built site as an artifact for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./_site  # Ensure this matches the destination of your Jekyll build

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build-deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

